{"version":3,"sources":["Components/About/About.js","utils.js","Redux/Types/types.js","Redux/Action/cartAction.js","Components/Cart/Cart.js","Components/Contact/Contact.js","Components/Products/Products.js","Redux/Action/productAction.js","Components/Home/Home.js","Components/Login/Login.js","Redux/Action/userActions.js","Components/Register/Register.js","Components/Verification/Verification.js","Components/Checkout/Checkout.js","Redux/Action/orderAction.js","Components/Slider/Slider.js","Components/Header/Header.js","Components/MyOrders/MyOrders.js","Components/Main/Main.js","Components/Footer/Footer.js","Components/Nav/Nav.js","Components/Dashoard/Dashboard.js","Components/Orders/Orders.js","Components/SuccessMessage/SuccessMessage.js","Components/UploadProduct/UploadProduct.js","Components/UploadCategory/UploadCategory.js","Redux/Action/adminAction.js","Components/Users/Users.js","Components/DeleteProduct/DeleteProduct.js","Components/Admin/Admin.js","App.js","Redux/Store.js","Redux/Reducers/userReducer.js","Redux/Reducers/productReducer.js","Redux/Reducers/CategoriesReducer.js","Redux/Reducers/cartReducer.js","Redux/Reducers/orderReducer.js","Redux/Reducers/adminReducer.js","index.js"],"names":["About","className","to","src","alt","baseUrl","formatCurrency","price","validateConfirmPassword","password","confirmPassword","CREATE_USER_SUCCESS","CREATE_USER_FAILED","VERIFACATION_SUCCESS","VERIFACATION_FAILED","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","LOGOUT_USER","CHECK_USER","CHECK_ROLE","UPLOAD_PRODUCT_SUCCESS","UPLOAD_PRODUCT_FAILED","GET_ALL_PRODUCTS_SUCCESS","GET_ALL_PRODUCTS_FAILED","GET_ALL_CATEGORIES_SUCCESS","GET_ALL_CATEGORIES_FAILED","GET_FILTERED_PRODUCT_SUCCESS","GET_FILTERED_PRODUCT_FAILED","GET_ORDER_BY_PRICE_SUCCESS","GET_ORDER_BY_PRICE_FAILED","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAILED","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAILED","addToCartAction","product","dispatch","getState","cartItems","CartReducer","slice","alreadyExists","forEach","x","_id","count","push","type","payload","localStorage","setItem","JSON","stringify","Cart","CartFromStore","useSelector","state","useState","redirect","setredirect","useDispatch","right","map","effect","imageUrl","name","width","height","onClick","filter","removeFromCartAction","reduce","a","c","toFixed","Contact","success","setSuccess","error","setError","emailAddress","subject","message","contact","setContact","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","then","res","json","data","onSubmit","htmlFor","id","onChange","required","rows","defaultValue","customStyles","content","top","left","Products","ProductsFromStore","ProductReducer","CategoriesFromStore","CategoriesReducer","productModal","setProductModal","selectedCategory","setSelectedCategory","selectedOrderByPrice","setSelectedOrderByPrice","closeModal","useEffect","category","products","orderProductsByPriceAction","bottom","categories","disabled","length","href","openModal","shortDesc","ariaHideApp","isOpen","onRequestClose","style","longDesc","Home","Login","user","setUser","userFromStore","UserReducer","toLowerCase","isLogged","token","firstName","lastName","role","isAdmin","loginAction","placeholder","Register","setConfirmPassword","registerAction","aria-describedby","userRegisteration","Verification","verificationCode","setverificationCode","getItem","userVerified","detailsToSend","console","log","code","verified","userEmailAddress","Checkout","userId","OrderFromStore","OrderReducer","phoneNumber","city","totalPrice","order","setOrder","setIsOpen","handleChangeInputs","window","location","reload","removeItem","createOrderAction","alert","pattern","address","email","Date","createdAt","toString","Slider","data-ride","Header","MyOrders","orders","setOrders","Style","sort","b","item","status","Main","path","exact","Footer","setEmailAddress","adminFromStore","AdminReducer","class","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","backgroundColor","$","on","scrollTop","addClass","removeClass","Nav","userName","setuserName","data-target","aria-controls","aria-label","stopPropagation","Dashboard","ordersByMonth","revenueByMonth","labels","datasets","label","fill","borderColor","i","sumOrdersEachMonth","sumRevenueByMonth","j","getMonth","accumulator","users","Orders","orderModal","setOrderModal","changeStatusHandler","orderId","timer","setTimeout","clearTimeout","scope","SuccessMessage","props","myRef","React","useRef","ref","center","container","current","UploadProduct","setName","setPrice","setShortDesc","setLongDesc","setImageUrl","imageAlt","setImageAlt","productFromStore","files","document","querySelector","formData","FormData","append","secure_url","original_filename","catch","err","accept","selected","productUploaded","uploadProductAction","UploadCategory","resFromUploadCategory","setResFromUploadCategory","categoryToUpload","setCategoryToUpload","checkUserRoleAction","Users","contacts","setContacts","subscribes","setSubscribes","toDateString","subscribe","DeleteProduct","productId","setProductId","Admin","store","App","UserFromStore","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","action","userEmail","parse","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b4276369.chunk.js","sourcesContent":["import {\r\n    BrowserRouter as Link,\r\n} from \"react-router-dom\";\r\nconst About = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"bg-light\">\r\n                        <div className=\"container py-5\">\r\n                            <div className=\"row h-100 align-items-center py-5\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <h1 className=\"display-4\">About us</h1>\r\n                                    <p className=\"lead text-muted mb-0\">Lorem ipsum dolor sit, amet consectetur adipisicing elit.</p>\r\n                                    <p className=\"lead text-muted\">Snippet by <Link to=\"/\" className=\"text-muted\">\r\n                                        <u>Lorem ipsum </u></Link>\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"col-lg-6 d-none d-lg-block\"><img src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834136/illus_kftyh4.png\" alt=\"\" className=\"img-fluid\" /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-white py-5\">\r\n                        <div className=\"container py-5\">\r\n                            <div className=\"row align-items-center mb-5\">\r\n                                <div className=\"col-lg-6 order-2 order-lg-1\"><i className=\"fa fa-bar-chart fa-2x mb-3 text-primary\"></i>\r\n                                    <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\r\n                                    <p className=\"font-italic text-muted mb-4\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p><button className=\"btn btn-light px-5 rounded-pill shadow-sm\">Learn More</button>\r\n                                </div>\r\n                                <div className=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\"><img src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834139/img-1_e25nvh.jpg\" alt=\"\" className=\"img-fluid mb-4 mb-lg-0\" /></div>\r\n                            </div>\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-lg-5 px-5 mx-auto\"><img src=\"https://res.cloudinary.com/mhmd/image/upload/v1556834136/img-2_vdgqgn.jpg\" alt=\"\" className=\"img-fluid mb-4 mb-lg-0\" /></div>\r\n                                <div className=\"col-lg-6\"><i className=\"fa fa-leaf fa-2x mb-3 text-primary\"></i>\r\n                                    <h2 className=\"font-weight-light\">Lorem ipsum dolor sit amet</h2>\r\n                                    <p className=\"font-italic text-muted mb-4\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p><Link to=\"/\" className=\"btn btn-light px-5 rounded-pill shadow-sm\">Learn More</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default About;","export const baseUrl = 'https://dors-ecommerce-shop.herokuapp.com'\r\n\r\nexport const formatCurrency = (price) => {\r\n    return `$${price}`\r\n};\r\nexport const validateConfirmPassword = (password, confirmPassword) => {\r\n    if (password !== confirmPassword) {\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n\r\n","\r\n//  User Action Types\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAILED = 'CREATE_USER_FAILED';\r\nexport const VERIFACATION_SUCCESS = 'VERIFACATION_SUCCESS';\r\nexport const VERIFACATION_FAILED = 'VERIFACATION_FAILED';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_FAILD';\r\nexport const LOGOUT_USER = 'LOGOUTUSER';\r\nexport const CHECK_USER = 'CHECK_USER'\r\nexport const CHECK_ROLE = 'CHECK_ROLE'\r\n\r\n\r\n// Product Action Types\r\nexport const UPLOAD_PRODUCT_SUCCESS = \"UPLOAD_PRODUCT_SUCCESS\";\r\nexport const UPLOAD_PRODUCT_FAILED = \"UPLOAD_PRODUCT_FAILED\";\r\nexport const GET_ALL_PRODUCTS_SUCCESS = \"GET_ALL_PRODUCTS_SUCCESS\";\r\nexport const GET_ALL_PRODUCTS_FAILED = \"GET_ALL_PRODUCTS_FAILED\";\r\nexport const GET_ALL_CATEGORIES_SUCCESS = \"GET_ALL_CATEGORIES_SUCCESS\";\r\nexport const GET_ALL_CATEGORIES_FAILED = \"GET_ALL_CATEGORIES_FAILED\";\r\n\r\n\r\nexport const GET_FILTERED_PRODUCT_SUCCESS = \"GET_FILTERED_PRODUCT_SUCCESS\";\r\nexport const GET_FILTERED_PRODUCT_FAILED = \"GET_FILTERED_PRODUCT_FAILED\";\r\nexport const GET_ORDER_BY_PRICE_SUCCESS = \"GET_ORDER_BY_PRICE_SUCCESS\";\r\nexport const GET_ORDER_BY_PRICE_FAILED = \"GET_ORDER_BY_PRICE_FAILED\";\r\n\r\n\r\n// Cart Action Types\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\n\r\n//Order Action Types\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAILED = 'CREATE_ORDER_FAILED';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAILED = 'GET_ALL_USERS_FAILED';\r\nexport const GET_ALL_ORDERS_SUCCESS = 'GET_ALL_ORDERS_SUCCESS';\r\nexport const GET_ALL_ORDERS_FAILED = 'GET_ALL_ORDERS_FAILED';\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../Types/types\";\r\n\r\nexport const addToCartAction = (product) => (dispatch, getState) => {\r\n    let cartItems = getState().CartReducer.cartItems.slice();\r\n    let alreadyExists = false;\r\n    cartItems.forEach((x) => {\r\n        if (x._id === product._id) {\r\n            alreadyExists = true;\r\n            x.count++;\r\n        }\r\n    });\r\n    if (!alreadyExists) {\r\n        cartItems.push({ ...product, count: 1 });\r\n    }\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: cartItems,\r\n    });\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n}\r\n\r\nexport const removeFromCartAction = (product) => (dispatch, getState) => {\r\n    const cartItems = getState().CartReducer.cartItems.slice().filter((x) => x._id !== product._id);\r\n    dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload: cartItems\r\n    });\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n};","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { formatCurrency } from \"../../utils\";\r\nimport Fade from 'react-reveal/Fade';\r\nimport { removeFromCartAction } from '../../Redux/Action/cartAction';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const CartFromStore = useSelector(state => state.CartReducer);\r\n    const [redirect, setredirect] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const checkoutHandler = () => {\r\n        setredirect('/checkout')\r\n    }\r\n    return (\r\n        <>\r\n            {redirect && (\r\n                <Redirect to={redirect} />\r\n            )}\r\n            <Fade right>\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-3\">\r\n                        <h3>Shopping Cart</h3>\r\n                    </div>\r\n                    <div className=\"row mt-3 \">\r\n                        <div className=\"col\">\r\n                            <div className=\"row \">\r\n                                <table className=\"table table-sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"b-0\"></th>\r\n                                            <th className=\"b-0\"></th>\r\n                                            <th className=\"b-0\">Price</th>\r\n                                            <th className=\"b-0\">Qty</th>\r\n                                            <th className=\"b-0\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {CartFromStore.cartItems.map((product) => (\r\n                                            <tr key={product._id}>\r\n                                                <td>\r\n                                                    <LazyLoadImage\r\n                                                        className=\"card-img-top\"\r\n                                                        effect=\"blur\"\r\n                                                        src={product.imageUrl}\r\n                                                        alt={product.name}\r\n                                                        width=\"40px\"\r\n                                                        height=\"40px\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"\">{product.name}</td>\r\n                                                <td>{formatCurrency(product.price)}</td>\r\n                                                <td>{product.count}</td>\r\n\r\n                                                <td>\r\n                                                    <button onClick={() => dispatch(removeFromCartAction(product))} className=\"btn btn-sm mt-1\">🗑️</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <p className=\"col\"> Total Price :  {formatCurrency(\r\n                                CartFromStore.cartItems.reduce((a, c) => a + c.price * c.count, 0).toFixed(2))}\r\n                            </p>\r\n                            <div className=\"row\">\r\n                                <button className=\"btn btn-sm btn-success\" onClick={checkoutHandler}>Checkout</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Cart;","import React, { useState } from \"react\";\r\nimport { baseUrl } from '../../utils';\r\n\r\nconst Contact = () => {\r\n    const [success, setSuccess] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        emailAddress: '',\r\n        subject: '',\r\n        message: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setContact(contact => ({ ...contact, [name]: value }));\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await fetch(`${baseUrl}/api/user/contact`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(contact),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSuccess(data.success.message)\r\n                } else {\r\n                    setError(data.error.message)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className=\"mb-4\">\r\n                <h2 className=\"h1-responsive font-weight-bold text-center my-4\">Contact us</h2>\r\n                <p className=\"text-center w-responsive mx-auto mb-5\">Do you have any questions? Please do not hesitate to contact us directly. Our team will come back to you within\r\n          a matter of hours to help you.</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9 mb-md-0 mb-5\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <label htmlFor=\"name\" >Your name</label>\r\n                                        <input type=\"text\" id=\"name\" name=\"name\" className=\"form-control\" onChange={handleChange} required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <label htmlFor=\"email\" >Your email</label>\r\n                                        <input type=\"text\" id=\"email\" name=\"emailAddress\" className=\"form-control\" onChange={handleChange} required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"md-form mb-0\">\r\n                                        <label htmlFor=\"subject\" >Subject</label>\r\n                                        <input type=\"text\" id=\"subject\" name=\"subject\" className=\"form-control\" onChange={handleChange} required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"md-form\">\r\n                                        <label htmlFor=\"message\">Your message</label>\r\n                                        <textarea type=\"text\" id=\"message\" name=\"message\" rows={2} className=\"form-control md-textarea\" defaultValue={\"\"} onChange={handleChange} required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {success && (\r\n                                <h3 className=\"text-success\" >{success}</h3>\r\n                            )}\r\n                            {error && (\r\n                                <h3 className=\"text-danger\" >{error}</h3>\r\n                            )}\r\n                            <div className=\" mt-3 text-center text-md-left\">\r\n                                <button type=\"submit\" className=\"btn btn-lg btn-primary\">Send</button>\r\n                            </div>\r\n                        </form>\r\n                        <div />\r\n                    </div>\r\n                    <div className=\"col-md-3 text-center\">\r\n                        <ul className=\"list-unstyled mb-0\">\r\n                            <li key={'1'}><i className=\"fas fa-map-marker-alt fa-2x\" />\r\n                                <p>San Francisco, CA 94126, USA</p>\r\n                            </li>\r\n                            <li key={'2'}><i className=\"fas fa-phone mt-4 fa-2x\" />\r\n                                <p>+ 01 234 567 89</p>\r\n                            </li>\r\n                            <li key={'3'}><i className=\"fas fa-envelope mt-4 fa-2x\" />\r\n                                <p>contact@mdbootstrap.com</p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nexport default Contact;","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { formatCurrency } from \"../../utils\";\r\nimport './products.css';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { filterProductsAction, orderProductsByPriceAction } from \"../../Redux/Action/productAction\";\r\nimport { addToCartAction } from \"../../Redux/Action/cartAction\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '20%',\r\n        right: '10%',\r\n        left: '10%',\r\n    },\r\n};\r\n\r\nconst Products = () => {\r\n    const ProductsFromStore = useSelector(state => state.ProductReducer);\r\n    const CategoriesFromStore = useSelector(state => state.CategoriesReducer);\r\n    const [productModal, setProductModal] = useState(null);\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [selectedOrderByPrice, setSelectedOrderByPrice] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const openModal = (product) => {\r\n        setProductModal({ product });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setProductModal(null)\r\n    };\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setSelectedCategory(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        if (selectedCategory !== null) {\r\n            dispatch(filterProductsAction(selectedCategory));\r\n        }\r\n    }, [dispatch, selectedCategory]);\r\n\r\n    const handleOrderByPrice = (e) => {\r\n        setSelectedOrderByPrice(e.target.value)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let products = ProductsFromStore.products;\r\n        if (selectedOrderByPrice !== null) {\r\n            dispatch(orderProductsByPriceAction(products, selectedOrderByPrice));\r\n        }\r\n        return () => {\r\n            setSelectedOrderByPrice(null);\r\n        }\r\n    }, [ProductsFromStore.products, dispatch, selectedOrderByPrice]);\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCartAction(productModal.product));\r\n        closeModal();\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Fade bottom>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row navbar m-3\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <select id=\"orderby\" className=\"custom-select\" onChange={handleChangeCategory}>\r\n                                    <option value='all'>All Products</option>\r\n                                    {CategoriesFromStore.categories && (\r\n                                        <>\r\n                                            {CategoriesFromStore.categories.map(category => (\r\n                                                <option key={category._id} value={category.name}>{category.name}</option>\r\n                                            ))}\r\n                                        </>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <select className=\"custom-select\" defaultValue='all' id=\"filterby\" onChange={handleOrderByPrice}>\r\n                                    <option value=\"all\" disabled >Price</option>\r\n                                    <option value=\"highest\">Highest</option>\r\n                                    <option value=\"lowest\">Lowest</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row \">\r\n                    {ProductsFromStore.products && ProductsFromStore.products.length > 0 ? (\r\n                        <>\r\n                            {ProductsFromStore.products.map((product) => (\r\n                                <div key={product._id} className=\"col-sm-3 mb-2 \" >\r\n                                    <div className=\"card\"  >\r\n                                        <a href={\"#\" + product._id} onClick={() => openModal(product)}>\r\n                                            <LazyLoadImage\r\n                                                className=\"card-img-top img-responsive\"\r\n                                                effect=\"blur\"\r\n                                                src={product.imageUrl}\r\n                                                alt={product.name}\r\n                                                width=\"100%\"\r\n                                                height=\"auto\"\r\n                                            />\r\n                                        </a>\r\n                                        <div className=\"card-body\">\r\n                                            <h6 className=\"card-title\">{product.name}</h6>\r\n                                            <p>{product.shortDesc}</p>\r\n                                            <hr />\r\n                                            <div className=\"row\">\r\n                                                <h6 className=\"col\">Price : {formatCurrency(product.price)}</h6>\r\n                                            </div>\r\n                                            <button className=\"btn btn-sm btn-success float-left\" onClick={() => { dispatch(addToCartAction(product)) }}>Add To Cart</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <span>\r\n                                    <i className=\"fa-5x fa fa-spinner fa-spin\"> </i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </div>\r\n            </Fade>\r\n\r\n            {productModal && (\r\n                <>\r\n                    <Modal ariaHideApp={false}\r\n                        isOpen={true}\r\n                        onRequestClose={closeModal}\r\n                        style={customStyles} >\r\n                        <Zoom>\r\n                            <div className=\"container\">\r\n                                <button className=\"mb-3 btn-danger\" onClick={closeModal}>X</button>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <LazyLoadImage\r\n                                            className=\"card-img-top img-responsive\"\r\n                                            effect=\"blur\"\r\n                                            src={productModal.product.imageUrl}\r\n                                            alt={productModal.product.name}\r\n                                            width=\"100%\"\r\n                                            height=\"100%\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <h3>{productModal.product.name}</h3>\r\n                                        <h6>{productModal.product.shortDesc}</h6>\r\n                                        <hr />\r\n                                        <p>{productModal.product.longDesc}</p>\r\n                                        <div className=\"row\">\r\n                                            <h6 className=\"col\">Price: {formatCurrency(productModal.product.price)}</h6>\r\n                                        </div>\r\n                                        <button className=\"btn btn-success float-left\" onClick={addToCartHandler}>Add To Cart {formatCurrency(productModal.product.price)}</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Zoom>\r\n                    </Modal>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\nexport default Products;","import { baseUrl } from '../../utils';\r\nimport { UPLOAD_PRODUCT_SUCCESS, UPLOAD_PRODUCT_FAILED, GET_ALL_PRODUCTS_SUCCESS, GET_ALL_PRODUCTS_FAILED, GET_FILTERED_PRODUCT_SUCCESS, GET_FILTERED_PRODUCT_FAILED, GET_ORDER_BY_PRICE_SUCCESS, GET_ORDER_BY_PRICE_FAILED, GET_ALL_CATEGORIES_SUCCESS, GET_ALL_CATEGORIES_FAILED, } from '../Types/types';\r\n\r\n\r\nexport const uploadProductAction = (product) => (dispatch) => {\r\n    fetch(`${baseUrl}/api/product/upload`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(product),\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data.data === true) {\r\n                dispatch({\r\n                    type: UPLOAD_PRODUCT_SUCCESS,\r\n                    payload: data,\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: UPLOAD_PRODUCT_FAILED,\r\n                    payload: data,\r\n                })\r\n            }\r\n        })\r\n}\r\nexport const getAllProductAction = () => (dispatch) => {\r\n    fetch(`${baseUrl}/api/product/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data[0]) {\r\n                dispatch({\r\n                    type: GET_ALL_PRODUCTS_SUCCESS,\r\n                    payload: data\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ALL_PRODUCTS_FAILED,\r\n                    payload: data\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\nexport const filterProductsAction = (category) => (dispatch) => {\r\n    fetch(`${baseUrl}/api/product/${category}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data[0] && data[0]._id) {\r\n                dispatch({\r\n                    type: GET_FILTERED_PRODUCT_SUCCESS,\r\n                    payload: data\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: GET_FILTERED_PRODUCT_FAILED,\r\n                    payload: data\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const orderProductsByPriceAction = (products, selectedOrderByPrice) => (dispatch) => {\r\n    if (selectedOrderByPrice !== 'all') {\r\n        fetch(`${baseUrl}/api/product/orderbyprice`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({ products, selectedOrderByPrice }),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data) {\r\n                    dispatch({\r\n                        type: GET_ORDER_BY_PRICE_SUCCESS,\r\n                        payload: data\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_ORDER_BY_PRICE_FAILED,\r\n                        payload: data\r\n                    })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getAllCategoriesAction = () => (dispatch) => {\r\n    fetch(`${baseUrl}/api/product/getcategories`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data) {\r\n                dispatch({\r\n                    type: GET_ALL_CATEGORIES_SUCCESS,\r\n                    categories: data\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ALL_CATEGORIES_FAILED,\r\n                    categories: data\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport Cart from '../Cart/Cart';\r\nimport Products from '../Products/Products';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Home = () => {\r\n    const CartFromStore = useSelector(state => state.CartReducer);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Products />\r\n                </div>\r\n                {CartFromStore.cartItems.length > 0 && (\r\n                    <div className=\"col-md-4 cart\">\r\n                        <Cart />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginAction } from \"../../Redux/Action/userActions\";\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n    const [user, setUser] = useState({\r\n        emailAddress: '',\r\n        password: '',\r\n    });\r\n    const dispatch = useDispatch();\r\n    const userFromStore = useSelector(state => state.UserReducer);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(user => ({ ...user, [name]: value.toLowerCase() }));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (user.emailAddress && user.password) {\r\n            dispatch(loginAction(user))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {userFromStore.user === 'Unverified User' && (\r\n                <>\r\n                    < Redirect to='/verify' />\r\n                    <h3>You Need To Verify Code</h3>\r\n                </>\r\n            )}\r\n            {userFromStore.isLogged ? (\r\n                <Redirect to=\"/\" />\r\n            ) : (\r\n                <>\r\n                    <div className=\"container vh-100\">\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <h1>Login</h1>\r\n                        </div>\r\n                        <div className=\"row mt-5\">\r\n                            <form onSubmit={handleSubmit} className=\"mx-auto\" >\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailAddress\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"emailAddress\" id=\"emailAddress\" onChange={handleChange} placeholder=\"example@example.com\" required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={handleChange} required />\r\n                                </div>\r\n                                {userFromStore.user && (\r\n                                    <>\r\n                                        {userFromStore.user._id ? (\r\n                                            <>\r\n                                                <h5 className=\"alert-success\">Login Success</h5>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <h5 className=\"alert-danger\">{userFromStore.user}</h5>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                                <button type=\"submit\" className=\"btn btn-success\">Login</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","import { baseUrl } from \"../../utils\"\r\nimport { CREATE_USER_SUCCESS, CREATE_USER_FAILED, VERIFACATION_SUCCESS, VERIFACATION_FAILED, LOGIN_USER_SUCCESS, LOGIN_USER_FAILED, LOGOUT_USER, CHECK_USER } from \"../Types/types\"\r\n\r\nexport const registerAction = (user) => (dispatch) => {\r\n    fetch(`${baseUrl}/api/user/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(user),\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data.success) {\r\n                dispatch(\r\n                    {\r\n                        type: CREATE_USER_SUCCESS,\r\n                        payload: data,\r\n                    }\r\n                )\r\n            } else {\r\n                dispatch({\r\n                    type: CREATE_USER_FAILED,\r\n                    payload: data,\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const verificationCodeAction = (code) => (dispatch) => {\r\n    fetch(`${baseUrl}/api/user/verification`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(code),\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data === true) {\r\n                dispatch(\r\n                    {\r\n                        type: VERIFACATION_SUCCESS,\r\n                        verified: data,\r\n                        userEmailAddress: localStorage.getItem('UserEmailAddress')\r\n                    }\r\n                )\r\n            } else {\r\n                dispatch({\r\n                    type: VERIFACATION_FAILED,\r\n                    verified: data,\r\n                    userEmailAddress: localStorage.getItem('UserEmailAddress')\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\nexport const loginAction = (user) => (dispatch) => {\r\n    fetch(`${baseUrl}/api/user/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(user),\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data.token) {\r\n                localStorage.setItem('TokenAccess', data.token);\r\n                localStorage.setItem('UserName', `${data.user.firstName} ${data.user.lastName}`);\r\n                localStorage.setItem('UserId', data.user._id)\r\n                if (data.user.role !== \"Admin\") {\r\n                    dispatch(\r\n                        {\r\n                            type: LOGIN_USER_SUCCESS,\r\n                            data: data,\r\n                            isLogged: true,\r\n                            isAdmin: false\r\n\r\n                        });\r\n                } else {\r\n                    dispatch(\r\n                        {\r\n                            type: LOGIN_USER_SUCCESS,\r\n                            data: data,\r\n                            isLogged: true,\r\n                            isAdmin: true\r\n                        });\r\n                }\r\n            } else {\r\n                dispatch({\r\n                    type: LOGIN_USER_FAILED,\r\n                    data: data,\r\n                    isLogged: false,\r\n                    isAdmin: false\r\n                });\r\n            }\r\n        })\r\n}\r\n\r\nexport const logoutAction = () => (dispatch) => {\r\n    localStorage.removeItem('TokenAccess');\r\n    localStorage.removeItem('UserName');\r\n    localStorage.removeItem('UserId');\r\n    localStorage.removeItem('UserEmailAddress');\r\n    dispatch({\r\n        type: LOGOUT_USER,\r\n        isLogged: false\r\n    });\r\n}\r\n\r\nexport const checkUserAction = () => (dispatch) => {\r\n    if (localStorage.getItem('TokenAccess')) {\r\n        fetch(`${baseUrl}/api/user/checkToken`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": localStorage.getItem('TokenAccess'),\r\n                'Accept': 'application/json'\r\n            },\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data === true) {\r\n                    dispatch({\r\n                        type: CHECK_USER,\r\n                        isLogged: true\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: CHECK_USER,\r\n                        isLogged: false\r\n                    })\r\n                }\r\n            })\r\n    } else {\r\n        dispatch({\r\n            type: CHECK_USER,\r\n            isLogged: false,\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { registerAction } from \"../../Redux/Action/userActions\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { validateConfirmPassword } from \"../../utils\";\r\n\r\n// registerAction\r\nconst Register = () => {\r\n    const [user, setUser] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        password: '',\r\n        role: 'User'\r\n    });\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const userFromStore = useSelector(state => state.UserReducer);\r\n\r\n    const handleConfirmPassword = (e) => {\r\n        const { value } = e.target;\r\n        setConfirmPassword(value.toLowerCase())\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'emailAddress') {\r\n            setUser(user => ({ ...user, [name]: value.toLowerCase() }));\r\n        } else {\r\n            setUser(user => ({ ...user, [name]: value }));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (user.firstName && user.lastName && user.emailAddress && user.password) {\r\n            //set item need to remove!\r\n            localStorage.setItem('UserEmailAddress', user.emailAddress)\r\n            dispatch(registerAction(user));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container vh-100 \">\r\n                <div className=\"row mt-5 justify-content-center\">\r\n                    <h1>\r\n                        Signup\r\n                        </h1>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-5 \">\r\n                    <form onSubmit={handleSubmit} className=\"col-md-8 row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"firstName\" name=\"firstName\" onChange={handleChange} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input type=\"text\" id=\"lastName\" className=\"form-control\" name=\"lastName\" onChange={handleChange} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"emailAddress\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"emailAddress\" aria-describedby=\"emailAddress\" name=\"emailAddress\" onChange={handleChange} required />\r\n                                <small id=\"emailAddress\" className=\"form-text text-muted\">We will never share your details with anyone else.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" onChange={handleChange} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                {!validateConfirmPassword(user.password, confirmPassword) && (\r\n                                    <p className=\"text-danger bold\">Please enter identical passwords.</p>\r\n                                )}\r\n                                <input type=\"password\" name=\"confirmPassword\" className=\"form-control\" id=\"confirmPassword\" onChange={handleConfirmPassword} required />\r\n                            </div>\r\n                            {userFromStore.userRegisteration && (\r\n                                <>\r\n                                    {userFromStore.userRegisteration.success ? (\r\n                                        <Redirect to=\"/verify\" />\r\n                                    ) : (\r\n                                        <>\r\n                                            < h5 className=\"alert-danger\">{userFromStore.userRegisteration.error.message}</h5>\r\n                                        </>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                            <div className=\"form-group mt-5\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">SignUp</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { verificationCodeAction } from \"../../Redux/Action/userActions\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Verification = () => {\r\n    const [verificationCode, setverificationCode] = useState('');\r\n    const dispatch = useDispatch();\r\n    const userFromStore = useSelector(state => state.UserReducer);\r\n    const emailAddress = localStorage.getItem('UserEmailAddress')\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setverificationCode({ ...verificationCode, [name]: value });\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress && verificationCode) {\r\n            let detailsToSend = { ...verificationCode, emailAddress: emailAddress }\r\n            if (verificationCode) {\r\n                console.log(detailsToSend);\r\n                dispatch(verificationCodeAction(detailsToSend));\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {userFromStore.userVerified === true ? (\r\n                <Redirect to=\"/login\" />\r\n\r\n            ) : (\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"\">\r\n                            <h2>Email verification:</h2>\r\n                            <h5>Please enter the verification code that we sent to you at the email address :<span> {emailAddress}</span> </h5>\r\n                            <form className=\"form col-md-8\" onSubmit={handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"verificationCode\">Verification Code:</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"verificationCode\" id=\"verificationCode\" onChange={handleChange} placeholder=\"אמת קוד בן 4 ספרות.\" required />\r\n                                </div>\r\n                                <div>\r\n                                    {userFromStore.userVerified === true && (\r\n                                        <h4 className=\"alert-success\">Well done , you are Verified</h4>\r\n                                    )}\r\n                                    {userFromStore.userVerified === false && (\r\n                                        <h4 className=\"alert-danger\">Worng Code, Please Try Again</h4>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary float-left\" >Verify code </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Verification;","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createOrderAction } from \"../../Redux/Action/orderAction\";\r\nimport { formatCurrency } from \"../../utils\";\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '20%',\r\n        right: '10%',\r\n        left: '10%',\r\n    },\r\n}\r\nconst Checkout = () => {\r\n    const userId = localStorage.getItem('UserId');\r\n    const CartFromStore = useSelector(state => state.CartReducer);\r\n    const dispatch = useDispatch();\r\n    const OrderFromStore = useSelector(state => state.OrderReducer);\r\n    const [order, setOrder] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        phoneNumber: '',\r\n        city: '',\r\n        cartItems: CartFromStore.cartItems,\r\n        userId: userId ? userId : '',\r\n        totalPrice: CartFromStore.cartItems.reduce((a, c) => a + c.price * c.count, 0),\r\n    });\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const handleChangeInputs = (e) => {\r\n        const { name, value } = e.target;\r\n        setOrder(order => ({ ...order, [name]: value }));\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (order.cartItems.length > 0) {\r\n            dispatch(createOrderAction(order));\r\n        }\r\n        else {\r\n            alert('cart items empty')\r\n        }\r\n    }\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (OrderFromStore.order && isOpen === false) {\r\n            if (OrderFromStore.order.userId) {\r\n                window.location.reload(false);\r\n            }\r\n        }\r\n    }, [OrderFromStore.order, isOpen])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 order-md-2 mb-4\">\r\n                        <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <span className=\"text-muted\">Shopping Cart</span>\r\n                            <span className=\"badge badge-secondary badge-pill\">{CartFromStore.cartItems.length}</span>\r\n                        </h4>\r\n                        <ul className=\"list-group mb-3\">\r\n                            {CartFromStore.cartItems.map(product => (\r\n                                <>\r\n                                    <li key={product._id} className=\"list-group-item d-flex justify-content-between lh-condensed\">\r\n                                        <div>\r\n                                            <h6 className=\"my-0\">{product.name}</h6>\r\n                                        </div>\r\n                                        <span className=\"text-muted\">{formatCurrency(product.price)}X{product.count}</span>\r\n                                    </li>\r\n                                </>\r\n                            ))}\r\n\r\n                            <li key={\"1\"} className=\"list-group-item d-flex justify-content-between\">\r\n                                <span>Total Price:</span>\r\n                                <strong>{formatCurrency(CartFromStore.cartItems.reduce((a, c) => a + c.price * c.count, 0).toFixed(2))}</strong>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-8 order-md-1\">\r\n                        <h4 className=\"mb-3\">Billing address</h4>\r\n                        <form onSubmit={submitHandler} >\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <lable htmlFor=\"firstName\">First Name</lable>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"firstName\" name=\"firstName\" onChange={handleChangeInputs} required />\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <lable htmlFor=\"lastName\">Last Name</lable>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"lastName\" name=\"lastName\" onChange={handleChangeInputs} required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-3\">\r\n                                    <label htmlFor=\"emailAddress\">Email<span className=\"text-muted small \"> (This email will be used to send a receipt for the order)</span></label>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"emailAddress\" name=\"emailAddress\" onChange={handleChangeInputs} required />\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-2\">\r\n                                    <lable htmlFor=\"phoneNumber\">Phone Number</lable>\r\n                                    <input type=\"tel\" className=\"form-control\" id=\"phoneNumber\" name=\"phoneNumber\" pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"0501231234\" onChange={handleChangeInputs} required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 mt-2 mb-3\">\r\n                                    <lable htmlFor=\"city\">City</lable>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"city\" name=\"city\" onChange={handleChangeInputs} required />\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-3 \">\r\n                                    <label htmlFor=\"address\">Adress</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" onChange={handleChangeInputs} placeholder=\"1234 Main St\" required />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr className=\"mb-4\" />\r\n                            {OrderFromStore.order && (\r\n                                <>\r\n                                    {OrderFromStore.order._id ? (\r\n                                        <Modal isOpen={isOpen}\r\n                                            onRequestClose={closeModal}\r\n                                            style={customStyles}\r\n                                            ariaHideApp={false}\r\n                                        >\r\n                                            < Zoom >\r\n                                                <button className=\"btn btn-danger\" onClick={() => { closeModal() }}>x</button>\r\n                                                <div className=\"container pt-2 pt-md-4 px-md-5\">\r\n                                                    <div className=\"row justify-content-center\">\r\n                                                        <div width=\"50px\" height=\"50px\" className=\"bg-dark\">\r\n                                                            <img src=\"https://res.cloudinary.com/dorromano/image/upload/v1614711964/ezgif.com-gif-maker_5_ap2dgu.webp\" alt=\"Men's Beard\" width=\"50px\" height=\"50px\" />\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <table className=\"table table-borderless\">\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td className=\"border-0\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-md text-center text-md-left mb-3 mb-md-0\">\r\n                                                                            <h2 className=\"mb-1\"><strong>Men's Bread</strong></h2>\r\n                                                                            <p> 787 Brunswick, Los Angeles, CA 50028</p>\r\n                                                                            <p> support@Men'sBeard.com / 4444 555 555</p>\r\n                                                                            <strong>www.Men'sBeard.com</strong>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-center text-md-right\">\r\n                                                                            <span className=\"d-none d-md-block\">\r\n                                                                                <h1>Billed To</h1>\r\n                                                                            </span>\r\n                                                                            <h4 className=\"mb-0\">{OrderFromStore.order.name}</h4>\r\n                                                                            <h6>  {OrderFromStore.order.firstName} {OrderFromStore.order.lastName}</h6>\r\n                                                                            <h6>  {OrderFromStore.order.address},{OrderFromStore.order.city}</h6>\r\n                                                                            <h6>{OrderFromStore.order.email}</h6>\r\n                                                                            <h6>{OrderFromStore.order.phoneNumber}</h6>\r\n                                                                            <h5 className=\"mb-0 mt-3\">{new Date(OrderFromStore.order.createdAt).toString()}</h5>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                    <table className=\"table\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th>Summary</th>\r\n                                                                <th className=\"text-right\">Price</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {OrderFromStore.order.cartItems.map((x) => (\r\n                                                                <tr key={x._id}>\r\n                                                                    <td>\r\n                                                                        {x.count} {\"*\"} {x.name}\r\n                                                                    </td>\r\n                                                                    <td className=\"font-weight-bold align-middle text-right text-nowrap\">{formatCurrency(x.price * x.count)}</td>\r\n                                                                </tr>\r\n                                                            ))}\r\n                                                            <tr>\r\n                                                                <td className=\"text-right border-0 pt-4 colspan-2\">\r\n                                                                    <h5>Total: {formatCurrency(OrderFromStore.order.totalPrice)}</h5>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </Zoom>\r\n                                        </Modal>\r\n                                    ) : (\r\n                                        <>\r\n                                            <h3 className=\"alert-danger\">{OrderFromStore.order}</h3>\r\n                                            <hr className=\"mb-4\" />\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                </>\r\n                            )\r\n                            }\r\n                            <button className=\"btn btn-primary btn-lg btn-block mb-3\" type=\"submit\">Pay</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;","import { baseUrl } from \"../../utils\";\r\nimport { CREATE_ORDER_FAILED, CREATE_ORDER_SUCCESS } from \"../Types/types\"\r\n\r\nexport const createOrderAction = (order) => (dispatch) => {\r\n    fetch(`${baseUrl}/api/order/createorder`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(order),\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n            if (data._id) {\r\n                localStorage.removeItem('cartItems')\r\n                dispatch({\r\n                    type: CREATE_ORDER_SUCCESS,\r\n                    payload: data\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: CREATE_ORDER_FAILED,\r\n                    payload: data.error.message\r\n                })\r\n            }\r\n        })\r\n}\r\n","import './slider.css';\r\nimport React from \"react\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst Slider = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"carouselExample1\" className=\"carousel slide touch z-depth-1-half\" data-ride=\"carousel\">\r\n                <div className=\"carousel-inner\">\r\n\r\n                    <div className=\"carousel-item active\">\r\n                        <img src=\"https://res.cloudinary.com/dorromano/image/upload/v1629287678/ezgif.com-gif-maker_2_qbunza.webp\" width=\"100%\" height=\"500px\" className=\"responsiveImage\" alt=\"Third slide\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src=\"https://res.cloudinary.com/dorromano/image/upload/v1629287413/ezgif.com-gif-maker_1_aktq1o.webp\" className=\"responsiveImage\" width=\"100%\" height=\"500px\" alt=\"Third slide\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src=\"https://res.cloudinary.com/dorromano/image/upload/v1629287133/ezgif.com-gif-maker_1_fp47wb.webp\" width=\"100%\" height=\"500px\" className=\"responsiveImage\" alt=\"Third slide\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Slider;\r\n\r\n","import './header.css';\r\nimport Slider from '../Slider/Slider';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <>\r\n            <header className=\"wrapper\">\r\n                <Slider />\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from \"react\";\r\nimport { baseUrl, formatCurrency } from \"../../utils\";\r\n\r\nconst MyOrders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${baseUrl}/api/user/myOrders`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ _id: localStorage.getItem('UserId') }),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                setOrders(data)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div >\r\n                {!orders ? (\r\n                    <div>אין הזמנות למשתמש זה.</div>\r\n                ) : (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h1 className=\"col-sm-12\">My Orders</h1>\r\n                            <p className=\"col\">Here you can see the orders you have made and be updated on the status of the order.</p>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <table className=\"table table-responsive table-striped table-dark col\" Style={\"height: 400px; overflow: scroll;\"}>\r\n                                <thead className=\"thead-dark \">\r\n                                    <tr>\r\n                                        <th>Order ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>City</th>\r\n                                        <th>Address</th>\r\n                                        <th>Email </th>\r\n                                        <th> Products</th>\r\n                                        <th>Price</th>\r\n                                        <th>Status</th>\r\n                                        <th>Created At</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.firstName} {order.lastName}</td>\r\n                                            <td>{order.city}</td>\r\n                                            <td>{order.address}</td>\r\n                                            <td>{order.emailAddress}</td>\r\n                                            <td>{order.cartItems.map(item => (\r\n                                                <p key={item.name} className=\"small mute\">{item.name},</p>\r\n                                            ))}</td>\r\n                                            <td>{formatCurrency(order.totalPrice)}</td>\r\n                                            <td>{order.status}</td>\r\n                                            <td>{new Date(order.createdAt).toString()}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyOrders;","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport '../Cart/Cart.css'\r\nimport About from \"../About/About\";\r\nimport Cart from \"../Cart/Cart\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport Home from \"../Home/Home\";\r\nimport Login from \"../Login/Login\";\r\nimport Products from \"../Products/Products\";\r\nimport Register from \"../Register/Register\";\r\nimport Verification from \"../Verification/Verification\";\r\nimport Checkout from \"../Checkout/Checkout\";\r\nimport Header from \"../Header/Header\";\r\nimport MyOrders from \"../MyOrders/MyOrders\";\r\n\r\n\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <main className=\"container-fluid    \">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col\">\r\n                        <Route>\r\n                            <Switch>\r\n                                <Route path=\"/register\">\r\n                                    <Register />\r\n                                </Route>\r\n                                <Route path=\"/verify\">\r\n                                    <Verification />\r\n                                </Route>\r\n                                <Route path=\"/login\">\r\n                                    <Login />\r\n                                </Route>\r\n                                <Route path=\"/about\">\r\n                                    <About />\r\n                                </Route>\r\n                                <Route path=\"/contact\">\r\n                                    <Contact />\r\n                                </Route>\r\n                                <Route path=\"/products\">\r\n                                    <Products />\r\n                                </Route>\r\n                                <Route path=\"/cart\">\r\n                                    <Cart />\r\n                                </Route>\r\n                                <Route path=\"/checkout\">\r\n                                    <Checkout />\r\n                                </Route>\r\n                                <Route path=\"/myorders\">\r\n                                    <MyOrders />\r\n                                </Route>\r\n                                <Route exact path=\"/\">\r\n                                    <Home />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Route>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { baseUrl } from \"../../utils\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nconst Footer = () => {\r\n    const [emailAddress, setEmailAddress] = useState();\r\n    const [success, setSuccess] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const adminFromStore = useSelector(state => state.AdminReducer);\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEmailAddress({ [name]: value.toLowerCase() });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await fetch(`${baseUrl}/api/user/subscribe`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(emailAddress),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSuccess(data.success.message)\r\n                } else {\r\n                    setError(data.error.message)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <footer className=\"bg-dark text-center text-white\">\r\n            <div className=\"container p-4\">\r\n                <section>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-auto\">\r\n                                <p className=\"pt-2\">\r\n                                    <strong>Sign up for our newsletter</strong>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-md-5 col-12\">\r\n                                <div className=\"form-outline form-white mb-4\">\r\n                                    <input type=\"email\" id=\"form5Example2\" className=\"form-control\" name=\"emailAddress\" placeholder=\"Email address\" onChange={handleChange} />\r\n                                    {success ? (\r\n                                        <h6 className=\"text-success\" >{success}</h6>\r\n                                    ) : (\r\n                                        <>\r\n                                            {error && (\r\n                                                <h6 className=\"text-danger\" >{error}</h6>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <button type=\"submit\" className=\"btn btn-outline-light mb-4\"  >\r\n                                    Subscribe\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n                <section >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n                            <h5 className=\"text-uppercase\">For users</h5>\r\n                            <ul className=\"list-unstyled mb-0\">\r\n                                <li>\r\n                                    <Link to=\"/login\" className=\"text-white\">User Login</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/register\" className=\"text-white\">User Register</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/myorders\" className=\"text-white\">My Orders</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {adminFromStore.isAdmin === true && (\r\n                            <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n                                <h5 className=\"text-uppercase\">For Admin</h5>\r\n                                <ul className=\"list-unstyled mb-0\">\r\n\r\n                                    <li>\r\n                                        <Link to=\"/admin\" className=\"text-white\">Dashboard</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"dropdown\">\r\n                                            <span class=\" dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                Product Actions\r\n                                            </span>\r\n                                            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                <Link className=\"dropdown-item\" to=\"/admin/uploadproduct\">Upload Product</Link>\r\n                                                <Link className=\"dropdown-item\" to=\"/admin/uploadcategory\">Upload Category</Link>\r\n                                                <Link className=\"dropdown-item\" to=\"/admin/deleteproduct\">Delete Products</Link>                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/admin/orders\" className=\"text-white\">Orders</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/admin/users\" className=\"text-white\">Users</Link>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <div className=\"text-center p-3\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\r\n                © 2021 Copyright:{\" \"}\r\n                <span className=\"text-white\">Dor Romano</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport $ from 'jquery';\r\nimport './nav.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutAction } from '../../Redux/Action/userActions';\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\n\r\n\r\n// $(document).ready(function () {\r\n//     $(\".menu-icon\").on(\"click\", function () {\r\n//         $(\"nav ul\").toggleClass(\"showing\");\r\n//     });\r\n// });\r\n// Scrolling Effect\r\n$(window).on(\"scroll\", function () {\r\n    if ($(window).scrollTop()) {\r\n        $('nav').addClass('black');\r\n    }\r\n    else {\r\n        $('nav').removeClass('black');\r\n    }\r\n})\r\n\r\n\r\n\r\nconst Nav = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userFromStore = useSelector(state => state.UserReducer);\r\n    const CartFromStore = useSelector(state => state.CartReducer);\r\n    const [userName, setuserName] = useState(localStorage.getItem('UserName'));\r\n\r\n    useEffect(() => {\r\n        setuserName(localStorage.getItem('UserName'))\r\n    }, [userFromStore.user])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <nav className=\"navbar navbar-expand-md navbar-dark fixed-top\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <Link to=\"/\" >\r\n                    <img src=\"https://res.cloudinary.com/dorromano/image/upload/v1614711964/ezgif.com-gif-maker_5_ap2dgu.webp\" alt=\"LogoImg\" width=\"50px\" height=\"50px\" />\r\n                </Link>\r\n                <span className=\"cart-icon\">\r\n\r\n                    <Link to=\"/cart\" className=\" text-white\" onClick={(e) => e.stopPropagation()}>\r\n                        <i className=\"fa fa-shopping-cart fa-2x \">\r\n                            <span className=\"badge badge-pill red \"> {CartFromStore.cartItems.reduce((a, c) => a + c.count, 0)}</span>\r\n                        </i>\r\n                    </Link>\r\n                </span>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item mr-3\">\r\n\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About Us</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/contact\">Contact Us</Link>\r\n                        </li>\r\n                        {userFromStore.isLogged !== true ? (\r\n                            <>\r\n                                <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/register\">SignUp</Link></li>\r\n                                <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/login\">Login</Link></li>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/myorders\">My Orders</Link></li>\r\n                                <li className=\"nav-item text-white mt-2\"><h5>Hello {userName}</h5></li>\r\n                                <li className=\"nav-item\"><a onClick={() => {\r\n                                    dispatch(logoutAction())\r\n                                }} className=\"nav-link\" href=\"/\" >Logout</a></li>\r\n                            </>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Nav;","// import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { formatCurrency } from \"../../utils\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const adminFromStore = useSelector(state => state.AdminReducer);\r\n    let ordersByMonth = [];\r\n    let revenueByMonth = [];\r\n    const data = {\r\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n        datasets: [\r\n            {\r\n                label: \"Orders By Month\",\r\n                data: ordersByMonth,\r\n                fill: true,\r\n                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                borderColor: \"rgba(75,192,192,1)\"\r\n            },\r\n            {\r\n                label: \"Revenue By Month\",\r\n                data: revenueByMonth,\r\n                fill: false,\r\n                borderColor: \"#742774\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    if (adminFromStore.orders) {\r\n        for (let i = 0; i < data.labels.length; i++) {\r\n            let sumOrdersEachMonth = 0;\r\n            let sumRevenueByMonth = 0\r\n            for (let j = 0; j < adminFromStore.orders.length; j++) {\r\n                let jDate = new Date(adminFromStore.orders[j].createdAt)\r\n                let jMonth = jDate.getMonth();\r\n                if (jMonth === i) {\r\n                    sumOrdersEachMonth++;\r\n                    sumRevenueByMonth += adminFromStore.orders[j].totalPrice;\r\n                    revenueByMonth[i] = sumRevenueByMonth;\r\n                    ordersByMonth[i] = sumOrdersEachMonth;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card-columns mt-3\">\r\n                        {adminFromStore.orders && (\r\n                            <>\r\n                                <div className=\"card bg-primary \">\r\n                                    <div className=\"cart-title ml-2 mt-2\">\r\n                                        <h2>Revenue</h2>\r\n                                    </div>\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"card-text\">{formatCurrency(adminFromStore.orders.reduce((accumulator, order) => accumulator + order.totalPrice, 0).toFixed(2))}</h4>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card bg-warning \">\r\n                                    <div className=\"cart-title ml-2 mt-2\">\r\n                                        <h2>Total Sales</h2>\r\n                                    </div>\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"card-text\">{adminFromStore.orders.length}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div className=\"card bg-success\">\r\n                            <div className=\"cart-title ml-2 mt-2\">\r\n                                <h2>Users</h2>\r\n                            </div>\r\n                            <div className=\"card-body text-center\">\r\n                                {adminFromStore.users && (\r\n                                    <h4 className=\"card-text\">{adminFromStore.users.length}</h4>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Line data={data} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\r\nimport { formatCurrency } from \"../../utils\";\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Orders = () => {\r\n    const [orderModal, setOrderModal] = useState(null);\r\n    const adminFromStore = useSelector(state => state.AdminReducer);\r\n\r\n    const openModal = (order) => {\r\n        setOrderModal(order);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setOrderModal(null)\r\n    };\r\n\r\n\r\n\r\n    const changeStatusHandler = async (orderId) => {\r\n        await fetch(`http://localhost:5000/api/order/changestatus`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({ _id: orderId }),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                window.location.reload(false);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(orderModal);\r\n    }, [orderModal])\r\n    useEffect(() => {\r\n        //Refresh page every 5 min to see new orders\r\n        const timer = setTimeout(() => {\r\n            window.location.reload(false);\r\n        }, 300000);\r\n        return () => clearTimeout(timer);\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-100 vh-100\">\r\n                <h1>Active Orders</h1>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-sm table-responsive table-striped table-light col \" Style=\"height: 500px; overflow: scroll;\" >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Order ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">City</th>\r\n                                <th scope=\"col\">Address</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Products</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Status</th>\r\n                                <th scope=\"col\">Created At</th>\r\n                                <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >\r\n                            {adminFromStore.orders && (\r\n                                <>\r\n                                    {adminFromStore.orders.filter(order => order.status === \"Active\").sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td >{order._id}</td>\r\n                                            <td>{order.firstName} {order.lastName}</td>\r\n                                            <td>{order.city}</td>\r\n                                            <td>{order.address}</td>\r\n                                            <td>{order.emailAddress}</td>\r\n                                            <td>{order.cartItems.map(item => (\r\n                                                <p key={item.name} className=\"small mute\">{item.name},</p>\r\n                                            ))}</td>\r\n                                            <td>{formatCurrency(order.totalPrice)}</td>\r\n                                            <td>{order.status}</td>\r\n                                            <td>{new Date(order.createdAt).toString()}</td>\r\n                                            <td>\r\n                                                <button className=\" btn col mb-1\" onClick={() => { openModal(order) }}>👀</button>\r\n                                                <button className=\"btn btn-sm btn-success col\" onClick={() => { changeStatusHandler(order._id) }}>Mark as sent</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </>\r\n                            )}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"w-100\">\r\n                    <h1>All Orders</h1>\r\n                    <div className=\"row\">\r\n                        <table className=\"col table table-sm table-striped table-light table-responsive \" Style=\"height: 500px; overflow: scroll;\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Order ID</th>\r\n                                    <th scope=\"col\">Name</th>\r\n                                    <th scope=\"col\">City</th>\r\n                                    <th scope=\"col\">Address</th>\r\n                                    <th scope=\"col\">Email</th>\r\n                                    <th scope=\"col\">Products</th>\r\n                                    <th scope=\"col\">Price</th>\r\n                                    <th scope=\"col\">Status</th>\r\n                                    <th scope=\"col\">Created At</th>\r\n                                    <th scope=\"col\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {adminFromStore.orders && (\r\n                                    <>\r\n                                        {adminFromStore.orders.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).map((order) => (\r\n                                            <tr key={order._id}>\r\n                                                <td>{order._id}</td>\r\n                                                <td>{order.firstName} {order.lastName}</td>\r\n                                                <td>{order.city}</td>\r\n                                                <td>{order.address}</td>\r\n                                                <td>{order.emailAddress}</td>\r\n                                                <td>{order.cartItems.map(item => (\r\n                                                    <p key={item._id} className=\"small mute\">{item.name},</p>\r\n                                                ))}</td>\r\n                                                <td>{formatCurrency(order.totalPrice)}</td>\r\n                                                <td>{order.status}</td>\r\n                                                <td>{new Date(order.createdAt).toString()}</td>\r\n                                                <td>\r\n                                                    <button className=\" btn col mb-1\" onClick={() => openModal(order)}>👀</button>\r\n                                                    {order.status === \"Active\" && (\r\n                                                        <button className=\"btn btn-sm btn-success col\" onClick={() => { changeStatusHandler(order._id) }}>Mark as sent</button>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {orderModal && (\r\n                <>\r\n                    <Modal ariaHideApp={false}\r\n                        isOpen={true}\r\n                        onRequestClose={closeModal}>\r\n                        <Zoom >\r\n                            <button className=\"btn btn-danger\" onClick={() => { closeModal() }}>x</button>\r\n                            <div className=\"container pt-2 pt-md-4 px-md-5\">\r\n                                <div className=\"row justify-content-center\">\r\n                                    <div width=\"50px\" height=\"50px\" className=\"bg-dark\">\r\n                                        <img src=\"https://res.cloudinary.com/dorromano/image/upload/v1614711964/ezgif.com-gif-maker_5_ap2dgu.webp\" alt=\"Men's Beard\" width=\"50px\" height=\"50px\" />\r\n                                    </div>\r\n                                </div>\r\n                                <table className=\"table table-borderless\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"border-0\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md text-center text-md-left mb-3 mb-md-0\">\r\n                                                        <h2 className=\"mb-1\"><strong>Men's Bread</strong></h2>\r\n                                                        <p> 787 Brunswick, Los Angeles, CA 50028</p>\r\n                                                        <p> support@Men'sBeard.com / 4444 555 555</p>\r\n                                                        <strong>www.Men'sBeard.com</strong>\r\n                                                    </div>\r\n                                                    <div className=\"col text-center text-md-right\">\r\n                                                        <span className=\"d-none d-md-block\">\r\n                                                            <h1>Billed To</h1>\r\n                                                        </span>\r\n                                                        <h4 className=\"mb-0\">{orderModal.name}</h4>\r\n                                                        <h6>{orderModal.firstName} {orderModal.lastName}</h6>\r\n                                                        <h6>{orderModal.address},{orderModal.city}</h6>\r\n                                                        <h6>{orderModal.email}</h6>\r\n                                                        <h6>{orderModal.phoneNumber}</h6>\r\n                                                        <h5 className=\"mb-0 mt-3\">{new Date(orderModal.createdAt).toString()}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Summary</th>\r\n                                            <th className=\"text-right\">Price</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {orderModal.cartItems && (\r\n                                            <>\r\n                                                {orderModal.cartItems.map((x) => (\r\n                                                    <tr key={x._id}>\r\n                                                        <td>\r\n                                                            {x.count} {\"*\"} {x.name}\r\n                                                        </td>\r\n                                                        <td className=\"font-weight-bold align-middle text-right text-nowrap\">{formatCurrency(x.price * x.count)}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </>\r\n                                        )}\r\n                                        <tr>\r\n                                            <td className=\"text-right border-0 pt-4 colspan-2\">\r\n                                                <h5>Total: {formatCurrency(orderModal.totalPrice)}</h5>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <button className=\"btn btn-sm btn-danger col\" onClick={closeModal}>close</button>\r\n                        </Zoom>\r\n                    </Modal>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Orders;","import React, { useState } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '30%',\r\n        right: '20%',\r\n        bottom: '30%',\r\n        left: '20%',\r\n\r\n    },\r\n};\r\nconst SuccessMessage = (props) => {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n        window.location.reload(false);\r\n    };\r\n    const myRef = React.useRef(null);\r\n    return (\r\n        <div className=\"container\" ref={myRef} >\r\n            <Modal ariaHideApp={false}\r\n                isOpen={isOpen}\r\n                onRequestClose={closeModal}\r\n                center\r\n                style={customStyles}\r\n                container={myRef.current} >\r\n                <Zoom >\r\n                    <button className=\"btn btn-sm mb-3 btn-danger\" onClick={closeModal}>X</button>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\" alert-success\">\r\n                            <h3>{props.message}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-sm btn-primary\" onClick={closeModal}>סגור</button>\r\n                </Zoom>\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SuccessMessage;","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uploadProductAction } from \"../../Redux/Action/productAction\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\n\r\n\r\nconst UploadProduct = () => {\r\n    const [name, setName] = useState();\r\n    const [price, setPrice] = useState();\r\n    const [shortDesc, setShortDesc] = useState();\r\n    const [longDesc, setLongDesc] = useState();\r\n    const [selectedCategory, setSelectedCategory] = useState();\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [imageAlt, setImageAlt] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const productFromStore = useSelector(state => state.ProductReducer);\r\n    const CategoriesFromStore = useSelector(state => state.CategoriesReducer);\r\n\r\n\r\n    const handleImageUpload = (e) => {\r\n        e.preventDefault();\r\n        const { files } = document.querySelector('input[type=\"file\"]')\r\n        const formData = new FormData();\r\n        formData.append('file', files[0]);\r\n        // replace this with your upload preset name\r\n        formData.append('upload_preset', 'ml_default');\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData,\r\n        };\r\n        return fetch('https://api.cloudinary.com/v1_1/dorromano/image/upload', options)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setImageUrl(res.secure_url)\r\n                setImageAlt(res.original_filename)\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        setSelectedCategory(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (name && price && shortDesc && longDesc && selectedCategory && imageUrl) {\r\n            const product = {\r\n                name: name,\r\n                price: price,\r\n                shortDesc: shortDesc,\r\n                longDesc: longDesc,\r\n                category: selectedCategory,\r\n                imageUrl: imageUrl\r\n            }\r\n            dispatch(uploadProductAction(product));\r\n        } else {\r\n            alert('אנא ודא/י כי כל השדות מלאים')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container vh-100\">\r\n                <div className=\"row\">\r\n                    <form className=\"form col\" onSubmit={handleImageUpload}>\r\n                        <h1>Upload Product</h1>\r\n                        <h4>1. Please select image product <span className=\"text-danger\">(Only WebP File)</span></h4>\r\n                        <div className=\"form-group\">\r\n                            <span htmlFor=\"file\"> Image :</span>\r\n                            <input className=\"form-control col-md-6\" type=\"file\" accept=\".WebP\" name=\"file\" id=\"file\" onChange={(e) => {\r\n                            }} required />\r\n                            {imageUrl && (\r\n                                <div className=\"row alert-success\">\r\n                                    <h2 className=\"col-6\">Image uploaded successfully </h2>\r\n                                    <img className=\"\" width={120} height={100} src={imageUrl} alt={imageAlt} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary \">שלח</button>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n                {imageUrl && (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h4>2. Fill rest fildes</h4>\r\n                        </div>\r\n                        <div className=\" row\">\r\n                            <form className=\"form\" >\r\n                                <div className=\"form-group\">\r\n                                    <span htmlFor=\"name\">Product Name:</span>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" onChange={(e) => {\r\n                                        const { value } = e.target;\r\n                                        setName(value);\r\n                                    }} required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <span htmlFor=\"price\">Price: </span>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"price\" id=\"price\" onChange={(e) => {\r\n                                        const { value } = e.target;\r\n                                        setPrice(value);\r\n                                    }} required />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <span htmlFor=\"shortDesc\">Short Description </span>\r\n                                    <textarea className=\"form-control\" type=\"text\" name=\"shortDesc\" id=\"shortDesc\" rows=\"1\" onChange={(e) => {\r\n                                        const { value } = e.target;\r\n                                        setShortDesc(value);\r\n                                    }} required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <lable htmlFor=\"longDesc\">Long Description </lable>\r\n                                    <textarea className=\"form-control\" type=\"text\" name=\"longDesc\" id=\"longDesc\" rows=\"3\" onChange={(e) => {\r\n                                        const { value } = e.target;\r\n                                        setLongDesc(value);\r\n                                    }} required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <span htmlFor=\"category\" >Category: </span>\r\n                                    <select id=\"category\" name=\"category\" onChange={handleChangeCategory}>\r\n                                        <option selected disabled value=\"\">Categories</option>\r\n                                        {CategoriesFromStore.categories && (\r\n                                            <>\r\n                                                {CategoriesFromStore.categories.map(category => (\r\n                                                    <>\r\n                                                        <option key={category._id} value={category.name}>{category.name}</option>\r\n                                                    </>\r\n                                                ))}\r\n                                            </>\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n                                {productFromStore.productUploaded && (\r\n                                    <div>\r\n                                        {productFromStore.productUploaded.success ? (\r\n\r\n                                            <SuccessMessage message={productFromStore.productUploaded.success} />\r\n                                        ) : (\r\n                                            <h4 className=\"col alert-danger\">{productFromStore.productUploaded.error}</h4>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                                <button onClick={submitHandler} className=\"btn btn-primary\">Upload Product</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadProduct;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { baseUrl } from \"../../utils\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\n\r\nconst UploadCategory = () => {\r\n\r\n    const [resFromUploadCategory, setResFromUploadCategory] = useState(null);\r\n    const [categoryToUpload, setCategoryToUpload] = useState();\r\n\r\n\r\n    const handleChangeUploadCategory = (e) => {\r\n        setCategoryToUpload(e.target.value);\r\n    }\r\n\r\n    const handleSubmitCategoryUpload = (e) => {\r\n        e.preventDefault();\r\n        fetch(`${baseUrl}/api/product/uploadcategory`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({ name: categoryToUpload }),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data._id) {\r\n                    setResFromUploadCategory(data)\r\n                } else {\r\n                    setResFromUploadCategory(null);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container vh-100\">\r\n            <form onSubmit={handleSubmitCategoryUpload} className=\"form col\">\r\n                <h2>Upload Products Category</h2>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"uploadCategory\">Category Name:</label>\r\n                    <input id=\"uploadCategory\" onChange={handleChangeUploadCategory} type=\"text\" className=\"form-control col-6\" required />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Upload Category</button>\r\n                <div>\r\n                    {resFromUploadCategory && (\r\n                        <SuccessMessage message=\"Category uploaded successfully\" />\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadCategory;","import { baseUrl } from \"../../utils\";\r\nimport { CHECK_ROLE, GET_ALL_ORDERS_FAILED, GET_ALL_ORDERS_SUCCESS } from \"../Types/types\";\r\nimport { GET_ALL_USERS_SUCCESS, GET_ALL_USERS_FAILED } from '../Types/types';\r\n\r\nexport const checkUserRoleAction = () => async (dispatch) => {\r\n\r\n    await fetch(`${baseUrl}/api/user/checkrole/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n\r\n            \"Content-Type\": \"application/json\",\r\n            \"token\": localStorage.getItem('TokenAccess'),\r\n            'Accept': 'application/json'\r\n        },\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            if (data) {\r\n                dispatch({\r\n                    type: CHECK_ROLE,\r\n                    isAdmin: data\r\n                })\r\n            }\r\n        })\r\n};\r\n\r\n\r\nexport const getAllUsersAction = () => async (dispatch, getState) => {\r\n    await fetch(`${baseUrl}/api/user/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            let store = getState();\r\n            if (data) {\r\n                dispatch({\r\n                    type: GET_ALL_USERS_SUCCESS,\r\n                    payload: data,\r\n                    isAdmin: store.AdminReducer.isAdmin,\r\n                    orders: store.AdminReducer.orders\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ALL_USERS_FAILED,\r\n                    payload: [],\r\n                    isAdmin: store.AdminReducer.isAdmin,\r\n                    orders: store.AdminReducer.orders\r\n                })\r\n            }\r\n        });\r\n\r\n};\r\n\r\nexport const getAllOrdersAction = () => async (dispatch, getState) => {\r\n    await fetch(`${baseUrl}/api/order/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Accept': 'application/json'\r\n        },\r\n    }).then((res) => res.json())\r\n        .then((data) => {\r\n            let store = getState();\r\n            if (data) {\r\n                dispatch({\r\n                    type: GET_ALL_ORDERS_SUCCESS,\r\n                    orders: data,\r\n                    isAdmin: store.AdminReducer.isAdmin,\r\n\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ALL_ORDERS_FAILED,\r\n                    orders: data,\r\n                    isAdmin: store.AdminReducer.isAdmin,\r\n                })\r\n            }\r\n        });\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { baseUrl } from \"../../utils\";\r\n\r\nconst Users = () => {\r\n    const adminFromStore = useSelector(state => state.AdminReducer);\r\n    const [contacts, setContacts] = useState([]);\r\n    const [subscribes, setSubscribes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${baseUrl}/api/user/subscribes`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data) {\r\n                    setSubscribes(data);\r\n                }\r\n            });\r\n        fetch(`http://localhost:5000/api/user/contacts`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data) {\r\n                    setContacts(data);\r\n                }\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid vh-100\">\r\n                <div className=\"table-responsive\">\r\n                    <h1>All Users</h1>\r\n                    <table className=\"table table-sm table-striped table-light col\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">User ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Created At</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {adminFromStore.users && (\r\n                                <>\r\n\r\n\r\n                                    {adminFromStore.users.map((user) => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.firstName} {user.lastName}</td>\r\n                                            <td>{user.emailAddress}</td>\r\n                                            <td>{new Date(user.createdAt).toString()}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <h1>Contacts</h1>\r\n                    <table className=\"table table-sm table-striped table-light col\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Subject</th>\r\n                                <th scope=\"col\">Message</th>\r\n                                <th scope=\"col\">Created At</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >\r\n                            {contacts.map((contact) => (\r\n                                <tr key={contact.name}>\r\n                                    <td>{contact.name}</td>\r\n                                    <td>{contact.emailAddress}</td>\r\n                                    <td>{contact.subject}</td>\r\n                                    <td>{contact.message}</td>\r\n                                    <td>{new Date(contact.createdAt).toDateString()}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <h1>Subscribes</h1>\r\n                    <table className=\"table table-sm table-striped table-light col\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Created At</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >\r\n                            {subscribes.map((subscribe) => (\r\n                                <tr key={subscribe.emailAddress}>\r\n                                    <td>{subscribe.emailAddress}</td>\r\n                                    <td>{new Date(subscribe.createdAt).toDateString()}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;","import React, { useState, } from \"react\";\r\nimport { baseUrl } from \"../../utils\";\r\n\r\nconst DeleteProduct = () => {\r\n    const [success, setSuccess] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [productId, setProductId] = useState(null);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setProductId(productId => ({ ...productId, [name]: value }))\r\n    }\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await fetch(`${baseUrl}/api/product/delete`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"productId\": productId,\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(productId),\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSuccess(data.success.message)\r\n                } else {\r\n                    setError(data.error.message)\r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container vh-100\">\r\n                <div className=\"row\">\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        <h2>Delete Product By ID</h2>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"deleteProductInput\">Product ID</label>\r\n                            <input type=\"text\" id=\"deleteProductInput\" className=\"form-control\" name=\"productId\" onChange={handleChange} placeholder=\"Example: 602e33ffbbfb7126b410e4d3\" />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-danger\">Delete Product</button>\r\n                        {success ? (\r\n                            <h3 className=\"text-success\" >{success}</h3>\r\n                        ) : (\r\n                            <>\r\n                                {error && (\r\n                                    <h3 className=\"text-danger\" >{error}</h3>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default DeleteProduct;","import React, { useEffect } from \"react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"../Dashoard/Dashboard\";\r\nimport Orders from \"../Orders/Orders\";\r\nimport UploadProduct from \"../UploadProduct/UploadProduct\";\r\nimport UploadCategory from '../UploadCategory/UploadCategory';\r\nimport { checkUserRoleAction, getAllOrdersAction, getAllUsersAction } from \"../../Redux/Action/adminAction\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Users from \"../Users/Users\";\r\nimport DeleteProduct from \"../DeleteProduct/DeleteProduct\";\r\n\r\n\r\nconst Admin = () => {\r\n    const adminFromStore = useSelector(state => state.AdminReducer);\r\n    const dispatch = useDispatch();\r\n    const userFromStore = useSelector(state => state.UserReducer);\r\n\r\n    useEffect(() => {\r\n        if (userFromStore) {\r\n            if (userFromStore.isLogged === true) {\r\n                dispatch(checkUserRoleAction());\r\n                if (adminFromStore.isAdmin === true) {\r\n                    dispatch(getAllUsersAction());\r\n                    dispatch(getAllOrdersAction());\r\n                }\r\n            }\r\n        }\r\n    }, [adminFromStore.isAdmin, dispatch, userFromStore])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {adminFromStore.isAdmin === true ? (\r\n                <Router>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 bg-dark\">\r\n                                <div className=\"text-white mt-3\">\r\n                                    <Link to=\"/admin\"><h2 className=\"text-white\">Dashboad</h2></Link>\r\n                                    <hr className=\"bg-light\"></hr>\r\n                                </div>\r\n                                <ul className=\"list-group \">\r\n                                    <li className=\"list-group-item\"><Link className=\"text-dark\" to=\"/admin/orders\">Orders</Link></li>\r\n                                    <li className=\"list-group-item\"><Link className=\"text-dark\" to=\"/admin/users\">Users</Link></li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <button className=\"btn btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Products\r\n                       <span className=\"caret\"></span></button>\r\n                                        <ul className=\"dropdown-menu\">\r\n                                            <li><Link className=\"text-dark\" to=\"/admin/uploadcategory\">Upload Category</Link></li>\r\n                                            <li><Link className=\"text-dark\" to=\"/admin/uploadproduct\">Upload Products</Link> </li>\r\n                                            <li><Link className=\"text-dark\" to=\"/admin/deleteproduct\">Delete Products</Link></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-sm-10\">\r\n                                <Switch>\r\n                                    <Route path=\"/admin/orders\">\r\n                                        <Orders orders={adminFromStore.orders} />\r\n                                    </Route>\r\n                                    <Route path=\"/admin/users\">\r\n                                        <Users users={adminFromStore.users} />\r\n                                    </Route>\r\n                                    <Route path=\"/admin/uploadcategory\">\r\n                                        <UploadCategory />\r\n                                    </Route>\r\n                                    <Route path=\"/admin/uploadproduct\">\r\n                                        <UploadProduct />\r\n                                    </Route>\r\n                                    <Route path=\"/admin/deleteproduct\">\r\n                                        <DeleteProduct />\r\n                                    </Route>\r\n                                    <Route exact path=\"/admin\">\r\n                                        <Dashboard orders={adminFromStore.orders} />\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            ) : (\r\n                <div className=\"alert-danger\">\r\n                    <h1>Sorry You are not Admin..</h1>\r\n                </div>\r\n            )}\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Admin;","import './index.css'\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch } from 'react-redux';\r\nimport Main from './Components/Main/Main';\r\nimport Footer from './Components/Footer/Footer';\r\nimport { getAllCategoriesAction, getAllProductAction, } from \"./Redux/Action/productAction\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Nav from \"./Components/Nav/Nav\";\r\nimport { checkUserAction } from \"./Redux/Action/userActions\";\r\nimport Admin from \"./Components/Admin/Admin\";\r\nimport { checkUserRoleAction } from \"./Redux/Action/adminAction\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const UserFromStore = useSelector(state => state.UserReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkUserAction());\r\n    dispatch(getAllProductAction());\r\n    dispatch(getAllCategoriesAction());\r\n    if (UserFromStore.isLogged === true) {\r\n      dispatch(checkUserRoleAction());\r\n    }\r\n  }, [UserFromStore.isLogged, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <Admin />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Nav />\r\n            <Main />\r\n            <Footer />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { userReducer } from './Reducers/userReducer';\r\nimport { productReducer } from './Reducers/productReducer';\r\nimport { cartReducer } from './Reducers/cartReducer';\r\nimport { orderReducer } from './Reducers/orderReducer';\r\nimport { categoriesReducer } from './Reducers/CategoriesReducer';\r\nimport { adminReducer } from './Reducers/adminReducer';\r\n\r\n\r\n// const initailState = { UserReducer: { isLogged: checkToken === true ? true : false, } };\r\nconst composeEnhancer = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst store = createStore(\r\n    combineReducers({\r\n        UserReducer: userReducer,\r\n        ProductReducer: productReducer,\r\n        CategoriesReducer: categoriesReducer,\r\n        CartReducer: cartReducer,\r\n        OrderReducer: orderReducer,\r\n        AdminReducer: adminReducer,\r\n\r\n    }),\r\n    // initailState,\r\n\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n","import { CREATE_USER_FAILED, CREATE_USER_SUCCESS, VERIFACATION_SUCCESS, VERIFACATION_FAILED, LOGIN_USER_SUCCESS, LOGIN_USER_FAILED, LOGOUT_USER, CHECK_USER } from \"../Types/types\";\r\n\r\n\r\nconst userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CHECK_USER:\r\n            return {\r\n                ...state,\r\n\r\n                isLogged: action.isLogged\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userRegisteration: action.payload\r\n            }\r\n        case CREATE_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                userRegisteration: action.payload\r\n            }\r\n        case VERIFACATION_SUCCESS:\r\n            return {\r\n                userVerified: action.verified,\r\n                userEmail: action.userEmailAddress\r\n            }\r\n        case VERIFACATION_FAILED:\r\n            return {\r\n                userEmail: action.userEmailAddress,\r\n                userVerified: action.verified,\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                user: action.data,\r\n                isLogged: action.isLogged,\r\n            }\r\n        case LOGIN_USER_FAILED:\r\n            return {\r\n                user: action.data,\r\n                isLogged: action.isLogged,\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                isLogged: action.isLogged,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { userReducer };","import { GET_FILTERED_PRODUCT_SUCCESS, GET_ALL_PRODUCTS_FAILED, GET_ALL_PRODUCTS_SUCCESS, UPLOAD_PRODUCT_FAILED, UPLOAD_PRODUCT_SUCCESS, GET_FILTERED_PRODUCT_FAILED, GET_ORDER_BY_PRICE_SUCCESS, GET_ORDER_BY_PRICE_FAILED } from \"../Types/types\";\r\n\r\nconst productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPLOAD_PRODUCT_SUCCESS:\r\n            return { productUploaded: action.payload }\r\n        case UPLOAD_PRODUCT_FAILED:\r\n            return { productUploaded: action.payload }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return { products: action.payload }\r\n        case GET_ALL_PRODUCTS_FAILED:\r\n            return { products: action.payload }\r\n        case GET_FILTERED_PRODUCT_SUCCESS:\r\n            return { products: action.payload }\r\n        case GET_FILTERED_PRODUCT_FAILED:\r\n            return { products: action.payload }\r\n        case GET_ORDER_BY_PRICE_SUCCESS:\r\n            return { products: action.payload }\r\n        case GET_ORDER_BY_PRICE_FAILED:\r\n            return { products: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { productReducer };","import { GET_ALL_CATEGORIES_FAILED, GET_ALL_CATEGORIES_SUCCESS } from \"../Types/types\";\r\n\r\nconst categoriesReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_CATEGORIES_SUCCESS:\r\n            return { categories: action.categories }\r\n        case GET_ALL_CATEGORIES_FAILED:\r\n            return { categories: action.categories }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { categoriesReducer };","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../Types/types\";\r\nconst cartReducer = (state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || '[]') }, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            return {\r\n                cartItems: action.payload\r\n            }\r\n        case REMOVE_FROM_CART:\r\n            return {\r\n                cartItems: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport { cartReducer };","import { CREATE_ORDER_FAILED, CREATE_ORDER_SUCCESS } from \"../Types/types\";\r\n\r\nconst orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER_SUCCESS:\r\n\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            }\r\n        case CREATE_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport { orderReducer };","import { CHECK_ROLE, GET_ALL_ORDERS_FAILED, GET_ALL_ORDERS_SUCCESS, GET_ALL_USERS_FAILED, GET_ALL_USERS_SUCCESS } from \"../Types/types\";\r\n\r\nconst adminReducer = (state = { isAdmin: false }, action) => {\r\n    switch (action.type) {\r\n        case CHECK_ROLE:\r\n            return {\r\n                ...state,\r\n                isAdmin: action.isAdmin,\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                isAdmin: action.isAdmin,\r\n            }\r\n        case GET_ALL_USERS_FAILED:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                isAdmin: action.isAdmin,\r\n\r\n            }\r\n        case GET_ALL_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAdmin: action.isAdmin,\r\n                orders: action.orders\r\n            }\r\n        case GET_ALL_ORDERS_FAILED:\r\n            return {\r\n                ...state,\r\n                isAdmin: action.isAdmin,\r\n                orders: action.orders\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { adminReducer };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/Store'\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}